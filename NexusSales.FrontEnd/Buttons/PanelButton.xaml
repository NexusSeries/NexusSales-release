<UserControl x:Class="NexusSales.FrontEnd.Buttons.PanelButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NexusSales.FrontEnd.Buttons"
             xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             mc:Ignorable="d" 
             d:DesignHeight="60" d:DesignWidth="60"
             x:Name="root">

    <UserControl.Resources>
        <Style TargetType="Button" x:Key="PanelButtonStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{DynamicResource FontNormalBrush}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <!-- Glow Effect -->
                            <Border x:Name="glowBorder"
                                    Width="28" Height="28"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    CornerRadius="14"
                                    Background="{Binding GlowColor, ElementName=root}"
                                    Opacity="0">
                                <Border.Effect>
                                    <BlurEffect Radius="16" KernelType="Gaussian"/>
                                </Border.Effect>
                            </Border>
                            <!-- Icon Content -->
                            <ContentPresenter x:Name="mainContent"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Content="{Binding Icon, ElementName=root}">
                                <ContentPresenter.ContentTemplate>
                                    <DataTemplate>
                                        <ContentControl Content="{Binding}">
                                            <ContentControl.Resources>
                                                <Style TargetType="{x:Type local:PanelButtonIcon}">
                                                    <Setter Property="IconColor" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}, Mode=OneWay}" />
                                                </Style>
                                            </ContentControl.Resources>
                                        </ContentControl>
                                    </DataTemplate>
                                </ContentPresenter.ContentTemplate>
                                <ContentPresenter.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                </ContentPresenter.RenderTransform>
                                <ContentPresenter.RenderTransformOrigin>0.5,0.5</ContentPresenter.RenderTransformOrigin>
                            </ContentPresenter>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- Active State: Icon and glow are AccentElectricBrush -->
                            <DataTrigger Binding="{Binding IsActive, ElementName=root}" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource AccentElectricBrush}"/>
                                <Setter TargetName="glowBorder" Property="Opacity" Value="0.7"/>
                            </DataTrigger>
                            
                            <!-- Hover State: If not active, icon color changes -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsActive, ElementName=root}" Value="False"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Foreground" Value="{DynamicResource AccentElectricBrush}"/>
                            </MultiDataTrigger>

                            <!-- Glow effect on hover, if GlowEnabled is true -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                    <Condition Binding="{Binding GlowEnabled, ElementName=root}" Value="True"/>
                                    <Condition Binding="{Binding IsActive, ElementName=root}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="glowBorder"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0.7" Duration="0:0:0.18"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.EnterActions>
                                <MultiDataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="glowBorder"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0" Duration="0:0:0.18"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.ExitActions>
                            </MultiDataTrigger>

                            <!-- Animation effect on hover, if AnimateEnabled is true -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                    <Condition Binding="{Binding AnimateEnabled, ElementName=root}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="mainContent"
                                                             Storyboard.TargetProperty="RenderTransform.ScaleX"
                                                             To="1.4" Duration="0:0:0.2"/>
                                            <DoubleAnimation Storyboard.TargetName="mainContent"
                                                             Storyboard.TargetProperty="RenderTransform.ScaleY"
                                                             To="1.4" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.EnterActions>
                                <MultiDataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="mainContent"
                                                             Storyboard.TargetProperty="RenderTransform.ScaleX"
                                                             To="1" Duration="0:0:0.18"/>
                                            <DoubleAnimation Storyboard.TargetName="mainContent"
                                                             Storyboard.TargetProperty="RenderTransform.ScaleY"
                                                             To="1" Duration="0:0:0.18"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.ExitActions>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Button x:Name="button"
            Style="{StaticResource PanelButtonStyle}"
            Command="{Binding Command, ElementName=root}"
            CommandParameter="{Binding CommandParameter, ElementName=root}"
            ToolTip="{Binding ToolTipText, ElementName=root}"/>
</UserControl>