<UserControl x:Class="NexusSales.UI.UserControls.NotificationsPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NexusSales.UI.UserControls"
             xmlns:converters="clr-namespace:NexusSales.UI.Converters"
             xmlns:iconPacks="http://schemas.materialdesigninxaml.net/winfx/xaml/iconpacks"
             xmlns:controls="clr-namespace:System.Windows.Controls;assembly=PresentationFramework"
             mc:Ignorable="d" 
             d:DesignHeight="350" d:DesignWidth="550"
             Background="Transparent"
             BorderBrush="Transparent"
             ClipToBounds="False"
             IsVisibleChanged="UserControl_IsVisibleChanged">
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="UserControl.Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <!-- Animations preserved -->
                    <DoubleAnimation Storyboard.TargetName="MainBorder" 
                                     Storyboard.TargetProperty="Opacity"
                                     From="0" To="1" Duration="0:0:0.3" />
                    
                    <ThicknessAnimation Storyboard.TargetName="MainBorder" 
                                     Storyboard.TargetProperty="Margin"
                                     From="0,-30,0,0" To="0,0,0,0" Duration="0:0:0.3">
                        <ThicknessAnimation.EasingFunction>
                            <BackEase EasingMode="EaseOut" Amplitude="0.3"/>
                        </ThicknessAnimation.EasingFunction>
                    </ThicknessAnimation>
                    
                    <DoubleAnimation Storyboard.TargetName="MainScaleTransform" 
                                     Storyboard.TargetProperty="ScaleX"
                                     From="0.95" To="1" Duration="0:0:0.3">
                        <DoubleAnimation.EasingFunction>
                            <ElasticEase EasingMode="EaseOut" Oscillations="1" Springiness="3"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <DoubleAnimation Storyboard.TargetName="MainScaleTransform" 
                                     Storyboard.TargetProperty="ScaleY"
                                     From="0.95" To="1" Duration="0:0:0.3">
                        <DoubleAnimation.EasingFunction>
                            <ElasticEase EasingMode="EaseOut" Oscillations="1" Springiness="3"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </UserControl.Triggers>
    
    <!-- Resources preserved -->
    <UserControl.Resources>
        <!-- Resource content unchanged -->
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:UnreadNotificationBackgroundConverter x:Key="UnreadNotificationBackgroundConverter"/>
        <converters:OrBooleanConverter x:Key="OrBooleanConverter"/>
        
        <!-- Styles preserved -->
        <Style x:Key="ModernCircularProgressBar" TargetType="{x:Type ProgressBar}">
            <!-- Style content unchanged -->
        </Style>
        
        <Style x:Key="AccentButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#00AEEF"/>
            <Setter Property="Foreground" Value="{StaticResource FontNormalBrush}"/>
            <Setter Property="Padding" Value="6,2"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#0090FF"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="DangerButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#EA4C4C"/>
            <Setter Property="Foreground" Value="{StaticResource FontNormalBrush}"/>
            <Setter Property="Padding" Value="6,2"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#C0392B"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="NotificationItemAnimation" TargetType="Border">
            <!-- Style content unchanged -->
        </Style>
    </UserControl.Resources>
    
    <!-- Main content with fixed borders -->
    <Border x:Name="MainBorder" 
            CornerRadius="24" 
            Background="{StaticResource BackgroundBrush}" 
            BorderThickness="0" 
            Padding="0" 
            Opacity="1" 
            ClipToBounds="False"
            Margin="5">
        <Border.RenderTransform>
            <TransformGroup>
                <ScaleTransform x:Name="MainScaleTransform" ScaleX="1" ScaleY="1"/>
            </TransformGroup>
        </Border.RenderTransform>
        <Border.Effect>
            <DropShadowEffect BlurRadius="24" 
                              ShadowDepth="0" 
                              Color="{StaticResource AccentColor}" 
                              Opacity="0.4"/>
        </Border.Effect>
        
        <!-- Main content grid -->
        <Grid ClipToBounds="False">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Content -->
            <Grid Grid.Row="1">
                <!-- Loading Indicator, Empty State, and Notifications List preserved -->
                <!-- Content unchanged -->
                
                <!-- Loading Indicator -->
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center"
                        Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid>
                        <!-- Circular ProgressBar -->
                        <Ellipse Width="48" Height="48" Stroke="#00AEEF" StrokeThickness="5" Opacity="0.2"/>
                        <Ellipse Width="48" Height="48" Stroke="#00AEEF" StrokeThickness="5"
                             StrokeDashArray="6 6" StrokeDashCap="Round">
                            <Ellipse.RenderTransform>
                                <RotateTransform x:Name="LoadingSpinner" Angle="0" CenterX="24" CenterY="24"/>
                            </Ellipse.RenderTransform>
                            <Ellipse.Triggers>
                                <EventTrigger RoutedEvent="Ellipse.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimation Storyboard.TargetName="LoadingSpinner"
                                                         Storyboard.TargetProperty="Angle"
                                                         From="0" To="360" Duration="0:0:1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Ellipse.Triggers>
                        </Ellipse>
                        <!-- Bell-off icon in the center -->
                    </Grid>
                </StackPanel>

                <!-- Empty State -->
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center"
                        Visibility="{Binding HasNotifications, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                    <Viewbox Width="40" Height="40" Margin="0,0,0,8">
                        <Canvas>
                            <Path x:Name="EmptyBellOff"
                              Data="M20.84,22.73L18.11,20H6V18L4,16V11C4,7.93 5.64,5.36 8.5,4.68V4A1.5,1.5 0 0,1 12,2.5A1.5,1.5 0 0,1 13.5,4V4.68C16.36,5.36 18,7.92 18,11V16L19.84,17.84C20.09,18.09 20.09,18.5 19.84,18.75C19.59,19 19.18,19 18.93,18.75L20.84,20.66C21.09,20.91 21.09,21.32 20.84,21.57C20.59,21.82 20.18,21.82 19.93,21.57L20.84,22.73Z"
                              Fill="#888">
                                <Path.Triggers>
                                    <EventTrigger RoutedEvent="Loaded">
                                        <BeginStoryboard>
                                            <Storyboard RepeatBehavior="Forever" AutoReverse="True">
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             From="0.7" To="1" Duration="0:0:1.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Path.Triggers>
                            </Path>
                        </Canvas>
                    </Viewbox>
                    
                </StackPanel>

                <!-- Notifications List -->
                <ScrollViewer VerticalScrollBarVisibility="Auto"
                          Visibility="{Binding HasNotifications, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <StackPanel>
                        <!-- ItemsControl updated -->
                        <ItemsControl ItemsSource="{Binding Notifications}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <local:NotificationCard Loaded="NotificationCard_Loaded"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </ScrollViewer>
            </Grid>
        </Grid>
    </Border>
</UserControl>